@model (Doctor? doc, Patient? patient)

<div style="display: flex; flex-direction: row">
    <form class="addingForm" asp-action="NearestDoctor" asp-controller="Patients" method="get">
        <div class="form-group">
            <label for="patientId">Пациент:</label>
            <select class="form-control" id="patientId" name="id">
                <option value="">Выберите пациента</option>
                @foreach (var patient in ViewBag.Patients)
                {
                    <option value="@patient.PatientId.ToString()">@patient.ToString()</option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Найти</button>
    </form>

    @if (Model.doc is not null && Model.patient is not null)
    {
        <div id="result" style="display: flex; flex-direction: row;">
            <div style="margin-right: 20px">
                <p>@Model.doc.ToString()</p>
                <p>Долгота: @Model.doc.Location.Coordinates[0]</p>
                <p>Широта: @Model.doc.Location.Coordinates[1]</p>
            </div>
            <div>
                <p>@Model.patient.ToString()</p>
                <p>Долгота: @Model.patient.Location.Coordinates[0]</p>
                <p>Широта: @Model.patient.Location.Coordinates[1]</p>
            </div>
        </div>
    }
</div>

<div id="map" style="height: 700px"></div>
@section Scripts {
    <script>
        var map = L.map('map').setView([50.436, 30.533], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        let docLat, pLat;
        let docLng, pLng;
        let docLatLng, pLatLng;
        let docMarker, pMarker;

        let myIcon = L.icon({
        iconUrl: '/img/doctor.png',
        iconSize: [38, 38]
        });

    </script>
    @if (Model.doc is not null && Model.patient is not null)
    {
        <script>
            docLat = "@Model.doc.Location.Coordinates[1]".replace(',', '.');
            docLng = "@Model.doc.Location.Coordinates[0]".replace(',', '.');
            pLat = "@Model.patient.Location.Coordinates[1]".replace(',', '.');
            pLng = "@Model.patient.Location.Coordinates[0]".replace(',', '.');

            docLatLng = L.latLng(parseFloat(docLat), parseFloat(docLng));
            pLatLng = L.latLng(parseFloat(pLat), parseFloat(pLng));

            docMarker = L.marker(docLatLng, {icon: myIcon}).addTo(map).bindPopup('@Model.doc.ToString()');
            pMarker = L.marker(pLatLng).addTo(map).bindPopup('@Model.patient.ToString()');
        </script>
    }
    else
    {
        @foreach (Doctor doc in ViewBag.Doctors)
        {
            <script>
                docLat = "@doc.Location.Coordinates[1]".replace(',', '.');
                docLng = "@doc.Location.Coordinates[0]".replace(',', '.');

                docLatLng = L.latLng(parseFloat(docLat), parseFloat(docLng));
                docMarker = L.marker(docLatLng, {icon: myIcon}).addTo(map).bindPopup('@doc.ToString()');
            </script>
        }
        @foreach(Patient p in ViewBag.Patients)
        {
            <script>
                pLat = "@p.Location.Coordinates[1]".replace(',', '.');
                pLng = "@p.Location.Coordinates[0]".replace(',', '.');

                pLatLng = L.latLng(parseFloat(pLat), parseFloat(pLng));
                pMarker = L.marker(pLatLng).addTo(map).bindPopup('@p.ToString()');
            </script>
        }
    }
}

